buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
        hibernateVersion = '5.1.0.Final'
        igniteVersion = "1.5.0.final"
        logbackVersion = "1.1.5"
        slf4jVersion = "1.7.16"

        //test only
        assert4jVersion = "3.3.0"
        junitVersion = "4.12"

        //plugins only
        nebulaDependencyLockVersion = '4.2.0'
        nebulaFacetVersion = '3.0.4'
        nebulaInfoVersion = '3.0.3'
        nebulaProjectVersion = '3.0.4'
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.netflix.nebula:gradle-info-plugin:3.+')
        classpath('com.netflix.nebula:nebula-project-plugin:3.+')
    }
}

plugins {
    id 'nebula.dependency-lock' version '4.2.0'
    id "nebula.facet" version '3.0.4'
    id "nebula.info" version '3.0.3'
    id "nebula.project" version '3.0.4'
}

ext {
    springBootVersion = '1.3.0.RELEASE'
    hibernateVersion = '5.1.0.Final'
    igniteVersion = "1.5.0.final"
    logbackVersion = "1.1.5"
    slf4jVersion = "1.7.16"

    //test only
    assert4jVersion = "3.3.0"
    junitVersion = "4.12"

    //plugins only
    nebulaDependencyLockVersion = '4.2.0'
    nebulaFacetVersion = '3.0.4'
    nebulaInfoVersion = '3.0.3'
    nebulaProjectVersion = '3.0.4'
}

subprojects {

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'nebula.facet'
    apply plugin: 'nebula.info'
    apply plugin: 'nebula.project'

    apply from:  "${rootDir}/gradle/compiler.gradle"
    apply from: "${rootDir}/gradle/test.gradle"
    apply from: "${rootDir}/gradle/jar.gradle"

    configurations {
        all*.exclude group: 'xml-apis', module: 'xml-apis'
    }

    //common dependencies, can be customized in the modules build.gradle
    //keep all versions above though
    dependencies {
        compile "org.apache.ignite:ignite-core:${igniteVersion}"
        compile "org.apache.ignite:ignite-spring:${igniteVersion}"
        compile "org.apache.ignite:ignite-indexing:${igniteVersion}"
        compile "org.hibernate:hibernate-core:${hibernateVersion}"
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "org.slf4j:slf4j-api:${slf4jVersion}"

        testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.assertj:assertj-core:${assert4jVersion}"
    }
}

configure(rootProject) {
    task wrapper(type: Wrapper) {
        description = "Generates gradlew[.bat] scripts"
        gradleVersion = '2.11'
    }
}
