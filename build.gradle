buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'nebula.dependency-lock' version '4.2.0'
}

ext {
    hibernateVersion = '5.1.0.Final'
    igniteVersion = "1.5.0.final"
    logbackVersion = "1.1.5"
    slf4jVersion = "1.7.16"
    springBootVersion = '1.3.0.RELEASE'


    //test
    assert4jVersion = "3.3.0"
    junitVersion = "4.12"
}

configurations {
    all*.exclude group: 'xml-apis', module: 'xml-apis'
}

apply from: "gradle/compiler.gradle"
apply from: "gradle/test.gradle"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.apache.ignite:ignite-core:${igniteVersion}"
    compile "org.apache.ignite:ignite-spring:${igniteVersion}"
    compile "org.apache.ignite:ignite-indexing:${igniteVersion}"
    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"


    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.assertj:assertj-core:${assert4jVersion}"
}

configure(rootProject) {
    task wrapper(type: Wrapper) {
        description = "Generates gradlew[.bat] scripts"
        gradleVersion = '2.11'
    }
}
